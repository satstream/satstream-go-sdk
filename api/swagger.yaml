openapi: 3.0.1
info:
  title: Satstream API
  description: Satstream API
  termsOfService: http://swagger.io/terms/
  contact:
    name: Satstream
    url: https://satstream.io
    email: team@satstream.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
- url: https://api.satstream.io/api/v1
paths:
  /address/verify-message:
    post:
      tags:
      - Addresses
      summary: Verify message
      description: Verifies a signed message
      operationId: verify-message
      requestBody:
        description: Message verification parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMessageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyMessageResponse'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /address/{address}:
    get:
      tags:
      - Addresses
      summary: Get address info
      description: Get detailed information about a specific address
      operationId: get-address
      parameters:
      - name: address
        in: path
        description: Address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /address/{address}/outputs:
    get:
      tags:
      - Addresses
      summary: Get UTXOs for an address
      description: Retrieve UTXOs held by a specific address with optional type filtering
      operationId: get-address-utxos
      parameters:
      - name: address
        in: path
        description: Address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: UTXO Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - any
          - cardinal
          - inscribed
          - runic
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressUTXOsResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /address/{address}/validate:
    get:
      tags:
      - Addresses
      summary: Validate address
      description: Returns information about the given Bitcoin address
      operationId: validate-address
      parameters:
      - name: address
        in: path
        description: Bitcoin address to validate
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAddressResponse'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /block/raw/{identifier}/decoded:
    get:
      tags:
      - Blocks
      summary: Get block by hash or height (verbosity 2)
      description: Get block by hash or height as a decoded object
      operationId: get-block-decoded
      parameters:
      - name: identifier
        in: path
        description: Block hash or height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Decoded block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /block/raw/{identifier}/hex:
    get:
      tags:
      - Blocks
      summary: Get block by hash or height (verbosity 0)
      description: Get block by hash or height as a raw hex string
      operationId: get-block-hex
      parameters:
      - name: identifier
        in: path
        description: Block hash or height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Raw block hex
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /block/raw/{identifier}/prevout:
    get:
      tags:
      - Blocks
      summary: Get block by hash or height (verbosity 3)
      description: Get block by hash or height with prevout information
      operationId: get-block-prevout
      parameters:
      - name: identifier
        in: path
        description: Block hash or height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Block with prevout information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /block/raw/{identifier}/summary:
    get:
      tags:
      - Blocks
      summary: Get block by hash or height (verbosity 1)
      description: Get block by hash or height as a summary object
      operationId: get-block-summary
      parameters:
      - name: identifier
        in: path
        description: Block hash or height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Block summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /block/stats:
    post:
      tags:
      - Blocks
      summary: Get block stats
      description: Computes per block statistics for a given window
      operationId: get-block-stats
      requestBody:
        description: Block stats request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetBlockStatsRequest'
        required: true
      responses:
        "200":
          description: Block stats data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /block/{identifier}:
    get:
      tags:
      - Blocks
      summary: Get block info by hash or height
      description: Get detailed information about a specific block by hash or height
      operationId: get-block-info
      parameters:
      - name: identifier
        in: path
        description: Block hash or height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blockchain/info:
    get:
      tags:
      - Blocks
      summary: Get blockchain information
      description: Returns an object containing various state info regarding blockchain
        processing
      operationId: get-blockchain-info
      responses:
        "200":
          description: Blockchain information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blockcount:
    get:
      tags:
      - Blocks
      summary: Get the height of the latest block
      description: Returns the height of the latest block
      operationId: get-block-count
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blockhash:
    get:
      tags:
      - Blocks
      summary: Returns blockhash for the latest block.
      description: Returns blockhash for the latest block.
      operationId: get-latest-blockhash
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blockhash/{block_height}:
    get:
      tags:
      - Blocks
      summary: Returns blockhash of specified block.
      description: Returns blockhash of specified block.
      operationId: get-block-hash-by-height
      parameters:
      - name: block_height
        in: path
        description: Block Height
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blockheight:
    get:
      tags:
      - Blocks
      summary: Returns the height of the latest block.
      description: Returns the height of the latest block.
      operationId: get-latest-block-height
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blocks:
    get:
      tags:
      - Blocks
      summary: "Returns the latest block height, last 100 block hashes, and featured\
        \ inscriptions"
      description: "Returns the latest block height, last 100 block hashes, and featured\
        \ inscriptions"
      operationId: get-blocks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /blocktime:
    get:
      tags:
      - Blocks
      summary: Get the timestamp of the latest block
      description: Returns the UNIX timestamp of when the latest block was mined
      operationId: get-latest-blocktime
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found - Block not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /chain/difficulty:
    get:
      tags:
      - Network
      summary: Get difficulty
      description: Returns the proof-of-work difficulty as a multiple of the minimum
        difficulty
      operationId: get-difficulty
      responses:
        "200":
          description: Difficulty data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /chain/txstats:
    post:
      tags:
      - Network
      summary: Get chain tx stats
      description: Computes statistics about the total number and rate of transactions
        in the chain
      operationId: get-chain-tx-stats
      requestBody:
        description: Chain tx stats request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetChainTxStatsRequest'
        required: true
      responses:
        "200":
          description: Chain tx stats data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /fee/estimate-raw:
    post:
      tags:
      - Fees
      summary: Estimate Raw Fee
      description: Estimates the approximate fee per kilobyte needed for a transaction
        to begin confirmation within conf_target blocks if possible.
      operationId: estimate-raw-fee
      requestBody:
        description: Fee estimation parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.EstimateRawFeeRequest'
        required: true
      responses:
        "200":
          description: Fee estimation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /fee/estimate-smart:
    post:
      tags:
      - Fees
      summary: Estimate smart fee
      description: Estimates the approximate fee per kilobyte needed for a transaction
        to begin confirmation within conf_target blocks
      operationId: estimate-smart-fee
      requestBody:
        description: Fee estimation parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.EstimateSmartFeeRequest'
        required: true
      responses:
        "200":
          description: Fee estimation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /inscription/{inscription_id}:
    get:
      tags:
      - Inscriptions
      summary: Get inscription info
      description: Get information about a specific inscription
      operationId: get-inscription
      parameters:
      - name: inscription_id
        in: path
        description: Inscription ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /inscription/{inscription_id}/{child_index}:
    get:
      tags:
      - Inscriptions
      summary: Get inscription child info
      description: Retrieve information about a specific child of an inscription
      operationId: fetch-inscription-child
      parameters:
      - name: inscription_id
        in: path
        description: Inscription ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: child_index
        in: path
        description: Child Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /inscriptions:
    get:
      tags:
      - Inscriptions
      summary: Get latest inscriptions
      description: Retrieve the latest 100 inscriptions (first page)
      operationId: get-latest-inscriptions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Inscriptions
      summary: Fetch multiple inscriptions
      description: Retrieve information about multiple inscriptions
      operationId: fetch-inscriptions
      requestBody:
        description: Inscription IDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: inscriptions
  /inscriptions/block/{block_height}:
    get:
      tags:
      - Inscriptions
      summary: Get inscriptions in a specific block
      description: Retrieve all inscriptions in a specific block
      operationId: get-block-inscriptions
      parameters:
      - name: block_height
        in: path
        description: Block Height
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /inscriptions/{page}:
    get:
      tags:
      - Inscriptions
      summary: Get latest inscriptions page
      description: Retrieve a specific page of 100 inscriptions
      operationId: get-latest-inscriptions-page
      parameters:
      - name: page
        in: path
        description: Page number
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /mempool/ancestors:
    post:
      tags:
      - Mempool
      summary: Get mempool ancestors
      description: Returns all in-mempool ancestors for a transaction in the mempool
      operationId: get-mempool-ancestors
      requestBody:
        description: Mempool ancestors request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetMempoolAncestorsRequest'
        required: true
      responses:
        "200":
          description: Mempool ancestors data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /mempool/descendants:
    post:
      tags:
      - Mempool
      summary: Get mempool descendants
      description: Returns all in-mempool descendants for a transaction in the mempool
      operationId: get-mempool-descendants
      requestBody:
        description: Mempool descendants request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetMempoolDescendantsRequest'
        required: true
      responses:
        "200":
          description: Mempool descendants data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /mempool/info:
    get:
      tags:
      - Mempool
      summary: Get mempool information
      description: Returns details on the active state of the TX memory pool
      operationId: get-mempool-info
      responses:
        "200":
          description: Mempool information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /mempool/raw:
    post:
      tags:
      - Mempool
      summary: Get raw mempool
      description: Returns all transaction ids in memory pool
      operationId: get-raw-mempool
      requestBody:
        description: Raw mempool request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetRawMempoolRequest'
        required: true
      responses:
        "200":
          description: Mempool transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /mempool/test-accept:
    post:
      tags:
      - Mempool
      summary: Test mempool accept
      description: Tests whether raw transactions would be accepted by mempool
      operationId: test-mempool-accept
      requestBody:
        description: Raw transactions to test
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.TestMempoolAcceptRequest'
        required: true
      responses:
        "200":
          description: Test results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /mining/info:
    get:
      tags:
      - Mining
      summary: Get mining information
      description: Returns a json object containing mining-related information
      operationId: get-mining-info
      responses:
        "200":
          description: Mining information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /mining/networkhashps:
    post:
      tags:
      - Mining
      summary: Get network hash per second
      description: Returns the estimated network hashes per second based on the last
        n blocks
      operationId: get-network-hashps
      requestBody:
        description: Network hash rate parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetNetworkHashPSRequest'
        required: true
      responses:
        "200":
          description: Network hash rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /output/{outpoint}:
    get:
      tags:
      - Outputs
      summary: Get output info by outpoint
      description: Retrieve information about a specific UTXO using outpoint string
      operationId: get-output-by-outpoint
      parameters:
      - name: outpoint
        in: path
        description: Outpoint
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /outputs:
    post:
      tags:
      - Outputs
      summary: Get multiple outputs
      description: Retrieve information about multiple UTXOs
      operationId: get-outputs
      requestBody:
        description: Outpoints
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: outpoints
  /psbt/analyze:
    post:
      tags:
      - PSBTs
      summary: Analyze PSBT
      description: Analyzes and provides information about the current status of a
        PSBT and its inputs
      operationId: analyze-psbt
      requestBody:
        description: PSBT to analyze
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.AnalyzePSBTRequest'
        required: true
      responses:
        "200":
          description: Analysis of the PSBT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /psbt/combine:
    post:
      tags:
      - PSBTs
      summary: Combine PSBTs
      description: Combines multiple partially signed Bitcoin transactions into one
        transaction
      operationId: combine-psbt
      requestBody:
        description: Array of PSBTs to combine
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CombinePSBTRequest'
        required: true
      responses:
        "200":
          description: Combined PSBT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /psbt/create:
    post:
      tags:
      - PSBTs
      summary: Create PSBT
      description: Creates a transaction in the Partially Signed Transaction format.
        Implements the Creator role.
      operationId: create-psbt
      requestBody:
        description: Transaction parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreatePSBTRequest'
        required: true
      responses:
        "200":
          description: Created PSBT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /psbt/decode:
    post:
      tags:
      - PSBTs
      summary: Decode PSBT
      description: "Return a JSON object representing the serialized, base64-encoded\
        \ partially signed Bitcoin transaction."
      operationId: decode-psbt
      requestBody:
        description: PSBT to decode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.AnalyzePSBTRequest'
        required: true
      responses:
        "200":
          description: Decoded PSBT data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /psbt/join:
    post:
      tags:
      - PSBTs
      summary: Join PSBTs
      description: Joins multiple distinct PSBTs with different inputs and outputs
        into one PSBT
      operationId: join-psbts
      requestBody:
        description: PSBTs to join
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.JoinPSBTsRequest'
        required: true
      responses:
        "200":
          description: Combined PSBT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /rune/{rune_name}:
    get:
      tags:
      - Runes
      summary: Get rune info
      description: Retrieve information about a specific rune
      operationId: get-rune
      parameters:
      - name: rune_name
        in: path
        description: Rune Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Rune not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /runes:
    get:
      tags:
      - Runes
      summary: Get latest runes
      description: Retrieve information about the last 100 inscribed runes (first
        page)
      operationId: get-latest-runes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Rune not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /runes/{page}:
    get:
      tags:
      - Runes
      summary: Get latest runes page
      description: Retrieve a specific page of 100 inscribed runes
      operationId: get-latest-runes-page
      parameters:
      - name: page
        in: path
        description: Page number
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Rune not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /sat/{number}:
    get:
      tags:
      - Satoshis
      summary: Get satoshi info
      description: Retrieve information about a specific satoshi
      operationId: get-satoshi
      parameters:
      - name: number
        in: path
        description: Satoshi Number
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Satoshi not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /script/decode:
    post:
      tags:
      - Scripts
      summary: Decode Script
      description: Decode a hex-encoded script and return detailed information about
        it.
      operationId: decode-script
      requestBody:
        description: Script to decode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.DecodeScriptRequest'
        required: true
      responses:
        "200":
          description: Decoded script data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /status:
    get:
      tags:
      - Status
      summary: Get server status
      description: Retrieve information about the server installation and index
      operationId: get-status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /tx/combine:
    post:
      tags:
      - Transactions
      summary: Combine Raw Transactions
      description: Combines multiple partially signed transactions into one transaction
      operationId: combine-raw-transaction
      requestBody:
        description: Array of hex-encoded raw transactions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CombineRawTransactionRequest'
        required: true
      responses:
        "200":
          description: Combined raw transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/convert-to-psbt:
    post:
      tags:
      - Transactions
      summary: Convert Raw Transaction to PSBT
      description: Converts a network serialized transaction to a PSBT. This should
        be used only with createrawtransaction and fundrawtransaction. createpsbt
        and walletcreatefundedpsbt should be used for new applications.
      operationId: convert-to-psbt
      requestBody:
        description: Raw transaction conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.ConvertToPSBTRequest'
        required: true
      responses:
        "200":
          description: Converted PSBT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/create:
    post:
      tags:
      - Transactions
      summary: Create Raw Transaction
      description: "Creates a raw transaction spending the given inputs and creating\
        \ new outputs. Note that the transaction's inputs are not signed, and it is\
        \ not stored in the wallet or transmitted to the network."
      operationId: create-raw-transaction
      requestBody:
        description: Transaction parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.CreateRawTxRequest'
        required: true
      responses:
        "200":
          description: Created raw transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/out:
    post:
      tags:
      - Transactions
      summary: Get transaction output
      description: Returns details about an unspent transaction output
      operationId: get-tx-out
      requestBody:
        description: Transaction output request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetTxOutRequest'
        required: true
      responses:
        "200":
          description: Transaction output details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/out/set/info:
    post:
      tags:
      - Transactions
      summary: Get transaction output set information
      description: Returns statistics about the unspent transaction output set
      operationId: get-tx-out-set-info
      requestBody:
        description: UTXO set info request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetTxOutSetInfoRequest'
        required: true
      responses:
        "200":
          description: UTXO set information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/outproof:
    post:
      tags:
      - Transactions
      summary: Get transaction output proof
      description: Returns a hex-encoded proof that one or more specified transactions
        were included in a block
      operationId: get-tx-out-proof
      requestBody:
        description: Transaction proof request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetTxOutProofRequest'
        required: true
      responses:
        "200":
          description: Transaction proof
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/outproof/verify:
    post:
      tags:
      - Transactions
      summary: Verify transaction output proof
      description: Verifies that a proof points to a transaction in a block
      operationId: verify-tx-out-proof
      requestBody:
        description: Proof to verify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.VerifyTxOutProofRequest'
        required: true
      responses:
        "200":
          description: Verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/send:
    post:
      tags:
      - Transactions
      summary: Send raw transaction
      description: Submits a raw transaction to local node and network
      operationId: send-raw-transaction
      requestBody:
        description: Raw transaction to send
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.SendRawTransactionRequest'
        required: true
      responses:
        "200":
          description: Transaction ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/spending-prevout:
    post:
      tags:
      - Transactions
      summary: Get transaction spending prevout
      description: Scans the mempool to find transactions spending any of the given
        outputs
      operationId: get-tx-spending-prevout
      requestBody:
        description: Transaction spending prevout request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requests.GetTxSpendingPrevoutRequest'
        required: true
      responses:
        "200":
          description: Transaction spending prevout information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request
  /tx/{txid}:
    get:
      tags:
      - Transactions
      summary: Get transaction info
      description: Retrieve information about a specific transaction
      operationId: get-transaction
      parameters:
      - name: txid
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /tx/{txid}/decode:
    get:
      tags:
      - Transactions
      summary: Decode a transaction
      description: Decodes a transaction and returns its inscriptions and runestone
        data
      operationId: decode-tx
      parameters:
      - name: txid
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /tx/{txid}/decoded:
    get:
      tags:
      - Transactions
      summary: Get raw transaction (verbosity 1)
      description: Get raw transaction as a decoded object
      operationId: get-raw-transaction-decoded
      parameters:
      - name: txid
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Decoded transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /tx/{txid}/hex:
    get:
      tags:
      - Transactions
      summary: Get raw transaction (verbosity 0)
      description: Get raw transaction as a raw hex string
      operationId: get-raw-transaction-hex
      parameters:
      - name: txid
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Raw transaction hex
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
  /tx/{txid}/prevout:
    get:
      tags:
      - Transactions
      summary: Get raw transaction (verbosity 2)
      description: Get raw transaction with prevout information
      operationId: get-raw-transaction-prevout
      parameters:
      - name: txid
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Transaction with prevout information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
        "500":
          description: Internal server error or Bitcoin RPC error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ResponseEnvelope'
      security:
      - ApiKeyAuth: []
components:
  schemas:
    AddressResponse:
      type: object
      properties:
        inscriptions:
          type: array
          items:
            type: string
        outputs:
          type: array
          items:
            type: string
        runes_balances:
          type: array
          items:
            $ref: '#/components/schemas/RunesBalance'
        sat_balance:
          type: integer
      example:
        outputs:
        - outputs
        - outputs
        runes_balances:
        - spaced_rune: spaced_rune
          symbol: symbol
          amount: amount
        - spaced_rune: spaced_rune
          symbol: symbol
          amount: amount
        inscriptions:
        - inscriptions
        - inscriptions
        sat_balance: 6
    Bip32Deriv:
      type: object
      properties:
        master_fingerprint:
          type: string
          description: The fingerprint of the master key
        path:
          type: string
          description: The derivation path
    Block1:
      type: object
      properties:
        bits:
          type: string
        chainwork:
          type: string
        confirmations:
          type: integer
        difficulty:
          type: number
        hash:
          type: string
        height:
          type: integer
        mediantime:
          type: integer
        merkleroot:
          type: string
        nTx:
          type: integer
        nextblockhash:
          type: string
        nonce:
          type: integer
        previousblockhash:
          type: string
        size:
          type: integer
        strippedsize:
          type: integer
        time:
          type: integer
        tx:
          type: array
          items:
            type: string
        version:
          type: integer
        versionHex:
          type: string
        weight:
          type: integer
    Block2:
      type: object
      properties:
        bits:
          type: string
        chainwork:
          type: string
        confirmations:
          type: integer
        difficulty:
          type: number
        hash:
          type: string
        height:
          type: integer
        mediantime:
          type: integer
        merkleroot:
          type: string
        nTx:
          type: integer
        nextblockhash:
          type: string
        nonce:
          type: integer
        previousblockhash:
          type: string
        size:
          type: integer
        strippedsize:
          type: integer
        time:
          type: integer
        tx:
          type: array
          description: List of detailed transactions
          items:
            $ref: '#/components/schemas/BtcTx2'
        version:
          type: integer
        versionHex:
          type: string
        weight:
          type: integer
    Block3:
      type: object
      properties:
        bits:
          type: string
        chainwork:
          type: string
        confirmations:
          type: integer
        difficulty:
          type: number
        hash:
          type: string
        height:
          type: integer
        mediantime:
          type: integer
        merkleroot:
          type: string
        nTx:
          type: integer
        nextblockhash:
          type: string
        nonce:
          type: integer
        previousblockhash:
          type: string
        size:
          type: integer
        strippedsize:
          type: integer
        time:
          type: integer
        tx:
          type: array
          description: List of fully detailed transactions
          items:
            $ref: '#/components/schemas/BtcTx3'
        version:
          type: integer
        versionHex:
          type: string
        weight:
          type: integer
    BlockResponse:
      type: object
      properties:
        best_height:
          type: integer
        hash:
          type: string
        height:
          type: integer
        inscriptions:
          type: array
          items:
            type: string
        runes:
          type: array
          items:
            type: string
        target:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    BlockStats:
      type: object
      properties:
        avgfee:
          type: number
          description: Average fee in the block
        avgfeerate:
          type: number
          description: Average feerate (in satoshis per virtual byte)
        avgtxsize:
          type: number
          description: Average transaction size
        blockhash:
          type: string
          description: The block hash (to check for potential reorgs)
        feerate_percentiles:
          type: array
          description: "Feerates at the 10th, 25th, 50th, 75th, and 90th percentile"
          items:
            type: number
        height:
          type: integer
          description: The height of the block
        ins:
          type: integer
          description: The number of inputs (excluding coinbase)
        maxfee:
          type: number
          description: Maximum fee in the block
        maxfeerate:
          type: number
          description: Maximum feerate (in satoshis per virtual byte)
        maxtxsize:
          type: integer
          description: Maximum transaction size
        medianfee:
          type: number
          description: Truncated median fee in the block
        mediantime:
          type: integer
          description: The block median time past
        mediantxsize:
          type: integer
          description: Truncated median transaction size
        minfee:
          type: number
          description: Minimum fee in the block
        minfeerate:
          type: number
          description: Minimum feerate (in satoshis per virtual byte)
        mintxsize:
          type: integer
          description: Minimum transaction size
        outs:
          type: integer
          description: The number of outputs
        subsidy:
          type: number
          description: The block subsidy
        swtotal_size:
          type: integer
          description: Total size of all segwit transactions
        swtotal_weight:
          type: integer
          description: Total weight of all segwit transactions
        swtxs:
          type: integer
          description: The number of segwit transactions
        time:
          type: integer
          description: The block time
        total_out:
          type: number
          description: Total amount in all outputs
        total_size:
          type: integer
          description: Total size of all non-coinbase transactions
        total_weight:
          type: integer
          description: Total weight of all non-coinbase transactions
        totalfee:
          type: number
          description: The fee total
        txs:
          type: integer
          description: The number of transactions (excluding coinbase)
        utxo_increase:
          type: integer
          description: The increase/decrease in the number of unspent outputs
        utxo_size_inc:
          type: integer
          description: The increase/decrease in size for the utxo index
    BlockVin2:
      type: object
      properties:
        coinbase:
          type: string
          description: Coinbase transaction input
        scriptSig:
          type: object
          description: The script signature
          allOf:
          - $ref: '#/components/schemas/ScriptSig'
        sequence:
          type: integer
          description: Input sequence number
        txid:
          type: string
          description: Transaction ID of the referenced output
        txinwitness:
          type: array
          items:
            type: string
        vout:
          type: integer
          description: Index of the referenced output
    BlockVin3:
      type: object
      properties:
        coinbase:
          type: string
        prevout:
          type: object
          description: Detailed previous output
          allOf:
          - $ref: '#/components/schemas/PrevOut'
        scriptSig:
          $ref: '#/components/schemas/ScriptSig'
        sequence:
          type: integer
        txid:
          type: string
        txinwitness:
          type: array
          items:
            type: string
        vout:
          type: integer
    BlockchainInfo:
      type: object
      properties:
        bestblockhash:
          type: string
          description: The hash of the currently best block
        blocks:
          type: integer
          description: The height of the most-work fully-validated chain
        chain:
          type: string
          description: "Current network name (main, test, signet, regtest)"
        chainwork:
          type: string
          description: "Total amount of work in active chain, in hexadecimal"
        difficulty:
          type: number
          description: The current difficulty
        headers:
          type: integer
          description: The current number of headers we have validated
        mediantime:
          type: integer
          description: The median block time expressed in UNIX epoch time
        time:
          type: integer
          description: The block time expressed in UNIX epoch time
    BlocksResponse:
      type: object
      properties:
        blocks:
          type: array
          items:
            type: string
        featured_blocks:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        last:
          type: integer
    BtcTx2:
      type: object
      properties:
        fee:
          type: number
        hash:
          type: string
        hex:
          type: string
        locktime:
          type: integer
        size:
          type: integer
        txid:
          type: string
        version:
          type: integer
        vin:
          type: array
          items:
            $ref: '#/components/schemas/BlockVin2'
        vout:
          type: array
          items:
            $ref: '#/components/schemas/Vout'
        vsize:
          type: integer
        weight:
          type: integer
    BtcTx3:
      type: object
      properties:
        fee:
          type: number
        hash:
          type: string
        hex:
          type: string
        locktime:
          type: integer
        size:
          type: integer
        txid:
          type: string
        version:
          type: integer
        vin:
          type: array
          items:
            $ref: '#/components/schemas/BlockVin3'
        vout:
          type: array
          items:
            $ref: '#/components/schemas/Vout'
        vsize:
          type: integer
        weight:
          type: integer
    ChainTxStats:
      type: object
      properties:
        time:
          type: integer
          description: The timestamp for the final block in the window
        txcount:
          type: integer
          description: The total number of transactions in the chain
        txrate:
          type: number
          description: The average rate of transactions per second
        window_block_count:
          type: integer
          description: Size of the window in number of blocks
        window_final_block_hash:
          type: string
          description: The hash of the final block in the window
        window_final_block_height:
          type: integer
          description: The height of the final block in the window
        window_interval:
          type: integer
          description: The elapsed time in the window in seconds
        window_tx_count:
          type: integer
          description: The number of transactions in the window
    DecodeResponse:
      type: object
      properties:
        inscriptions:
          type: array
          items:
            $ref: '#/components/schemas/DecodedInscription'
        runestone:
          $ref: '#/components/schemas/RunestoneData'
    DecodedInscription:
      type: object
      properties:
        input:
          type: integer
        offset:
          type: integer
        payload:
          $ref: '#/components/schemas/InscriptionData'
        pushnum:
          type: boolean
        stutter:
          type: boolean
    DecodedPSBT:
      type: object
      properties:
        fee:
          type: number
          description: The transaction fee paid if all UTXOs slots are filled
        inputs:
          type: array
          description: Array of inputs
          items:
            $ref: '#/components/schemas/DecodedPSBTInput'
        outputs:
          type: array
          description: Array of outputs
          items:
            $ref: '#/components/schemas/DecodedPSBTOutput'
        tx:
          type: object
          description: The decoded network-serialized unsigned transaction
          allOf:
          - $ref: '#/components/schemas/RawTx1'
        unknown:
          type: object
          description: The unknown global fields
          allOf:
          - $ref: '#/components/schemas/UnknownFields'
    DecodedPSBTInput:
      type: object
      properties:
        bip32_derivs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Bip32Deriv'
          description: The BIP32 derivation paths
        final_scriptsig:
          type: object
          description: The final script sig
          allOf:
          - $ref: '#/components/schemas/Script'
        final_scriptwitness:
          type: array
          description: The final script witness
          items:
            type: string
        non_witness_utxo:
          type: object
          description: Decoded network transaction for non-witness UTXOs
          allOf:
          - $ref: '#/components/schemas/RawTx1'
        partial_signatures:
          type: object
          additionalProperties:
            type: string
          description: The public key and signature pairs
        redeem_script:
          type: object
          description: The redeem script
          allOf:
          - $ref: '#/components/schemas/Script'
        sighash:
          type: string
          description: The sighash type to be used
        unknown:
          type: object
          description: Unknown fields
          allOf:
          - $ref: '#/components/schemas/UnknownFields'
        witness_script:
          type: object
          description: The witness script
          allOf:
          - $ref: '#/components/schemas/Script'
        witness_utxo:
          type: object
          description: Transaction output for witness UTXOs
          allOf:
          - $ref: '#/components/schemas/PSBTWitnessUtxo'
    DecodedPSBTOutput:
      type: object
      properties:
        bip32_derivs:
          type: array
          description: The BIP32 derivation paths
          items:
            $ref: '#/components/schemas/PSBTBip32Deriv'
        redeem_script:
          type: object
          description: The redeem script
          allOf:
          - $ref: '#/components/schemas/Script'
        unknown:
          type: object
          description: Unknown fields
          allOf:
          - $ref: '#/components/schemas/UnknownFields'
        witness_script:
          type: object
          description: The witness script
          allOf:
          - $ref: '#/components/schemas/Script'
    DecodedScript:
      type: object
      properties:
        address:
          type: string
          description: The Bitcoin address (only if well-defined)
        asm:
          type: string
          description: Script public key
        desc:
          type: string
          description: Inferred descriptor for the script
        p2sh:
          type: string
          description: P2SH address wrapping this redeem script
        segwit:
          type: object
          description: Witness script details
          allOf:
          - $ref: '#/components/schemas/SegwitDetails'
        type:
          type: string
          description: The output type
    Duration:
      type: object
      properties:
        nanos:
          type: integer
        secs:
          type: integer
    FeeHorizonEstimate:
      type: object
      properties:
        decay:
          type: number
          description: Exponential decay (per block) for historical moving average
        errors:
          type: array
          description: Errors encountered during processing
          items:
            type: string
        fail:
          type: object
          description: Information about highest range of feerates to fail
          allOf:
          - $ref: '#/components/schemas/FeeRange'
        feerate:
          type: number
          description: Estimate fee rate in BTC/kvB
        pass:
          type: object
          description: Information about lowest range of feerates to succeed
          allOf:
          - $ref: '#/components/schemas/FeeRange'
        scale:
          type: number
          description: Resolution of confirmation targets at this time horizon
    FeeRange:
      type: object
      properties:
        endrange:
          type: number
          description: End of feerate range
        inmempool:
          type: number
          description: Current number of txs in mempool unconfirmed
        leftmempool:
          type: number
          description: Number of txs that left mempool unconfirmed
        startrange:
          type: number
          description: Start of feerate range
        totalconfirmed:
          type: number
          description: Total number of txs confirmed
        withintarget:
          type: number
          description: Number of txs confirmed within target
    GetAddressResponse:
      type: object
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/AddressResponse'
        msg:
          type: string
      example:
        msg: msg
        code: 0
        data:
          outputs:
          - outputs
          - outputs
          runes_balances:
          - spaced_rune: spaced_rune
            symbol: symbol
            amount: amount
          - spaced_rune: spaced_rune
            symbol: symbol
            amount: amount
          inscriptions:
          - inscriptions
          - inscriptions
          sat_balance: 6
    GetAddressUTXOsResponse:
      type: object
      properties:
        code:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/OutputResponse'
        msg:
          type: string
      example:
        msg: msg
        code: 0
        data:
        - address: address
          runes:
            key: runes
          indexed: true
          inscriptions:
          - inscriptions
          - inscriptions
          spent: true
          sat_ranges:
          - - 6
            - 6
          - - 6
            - 6
          script_pubkey: script_pubkey
          value: 1
          outpoint: outpoint
          transaction: transaction
        - address: address
          runes:
            key: runes
          indexed: true
          inscriptions:
          - inscriptions
          - inscriptions
          spent: true
          sat_ranges:
          - - 6
            - 6
          - - 6
            - 6
          script_pubkey: script_pubkey
          value: 1
          outpoint: outpoint
          transaction: transaction
    Input:
      type: object
      properties:
        previous_output:
          type: string
        script_sig:
          type: string
        sequence:
          type: integer
        witness:
          type: array
          items:
            type: string
    InscriptionData:
      type: object
      properties:
        body:
          type: array
          items:
            type: integer
        content_encoding:
          type: string
        content_type:
          type: array
          items:
            type: integer
        delegate:
          type: string
        duplicate_field:
          type: boolean
        incomplete_field:
          type: boolean
        metadata:
          type: string
        metaprotocol:
          type: string
        parents:
          type: array
          items:
            type: string
        pointer:
          type: string
        rune:
          type: string
        unrecognized_even_field:
          type: boolean
    InscriptionResponse:
      type: object
      properties:
        address:
          type: string
        charms:
          type: array
          items:
            type: string
        children:
          type: array
          items:
            type: string
        content_length:
          type: integer
        content_type:
          type: string
        effective_content_type:
          type: string
        fee:
          type: integer
        height:
          type: integer
        id:
          type: string
        next:
          type: string
        number:
          type: integer
        parents:
          type: array
          items:
            type: string
        previous:
          type: string
        rune:
          type: string
        sat:
          type: string
        satpoint:
          type: string
        timestamp:
          type: integer
        value:
          type: integer
    LatestInscriptionsResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        more:
          type: boolean
        page_index:
          type: integer
    MempoolAncestorsData:
      type: object
      properties:
        detailed:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MempoolEntry'
          description: Only if verbose is true
        txids:
          type: array
          description: Only if verbose is false
          items:
            type: string
    MempoolDescendantsData:
      type: object
      properties:
        detailed:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MempoolEntry'
          description: Only if verbose is true
        txids:
          type: array
          description: Only if verbose is false
          items:
            type: string
    MempoolEntry:
      type: object
      properties:
        ancestorcount:
          type: integer
          description: Number of in-mempool ancestor transactions
        ancestorsize:
          type: integer
          description: Virtual size of in-mempool ancestors
        bip125-replaceable:
          type: boolean
          description: Whether this transaction is replaceable
        depends:
          type: array
          description: Parent transaction IDs
          items:
            type: string
        descendantcount:
          type: integer
          description: Number of in-mempool descendant transactions
        descendantsize:
          type: integer
          description: Virtual size of in-mempool descendants
        fees:
          type: object
          description: Fee information
          allOf:
          - $ref: '#/components/schemas/MempoolFees'
        height:
          type: integer
          description: Block height when transaction entered pool
        spentby:
          type: array
          description: Child transaction IDs
          items:
            type: string
        time:
          type: integer
          description: Time transaction entered pool
        unbroadcast:
          type: boolean
          description: Whether this transaction is currently unbroadcast
        vsize:
          type: integer
          description: Virtual transaction size
        weight:
          type: integer
          description: Transaction weight
        wtxid:
          type: string
          description: Hash of serialized transaction with witness data
    MempoolFees:
      type: object
      properties:
        ancestor:
          type: number
          description: Ancestor transaction fees in BTC
        base:
          type: number
          description: Base transaction fee in BTC
        descendant:
          type: number
          description: Descendant transaction fees in BTC
        modified:
          type: number
          description: Modified transaction fee in BTC
    MempoolInfo:
      type: object
      properties:
        bytes:
          type: integer
          description: Sum of all virtual transaction sizes
        fullrbf:
          type: boolean
          description: True if mempool accepts RBF without signaling inspection
        incrementalrelayfee:
          type: number
          description: Minimum fee rate increment for mempool limiting
        loaded:
          type: boolean
          description: True if the mempool is fully loaded
        maxmempool:
          type: integer
          description: Maximum memory usage for the mempool
        mempoolminfee:
          type: number
          description: Minimum fee rate in BTC/kvB for tx to be accepted
        minrelaytxfee:
          type: number
          description: Current minimum relay fee for transactions
        size:
          type: integer
          description: Current tx count
        total_fee:
          type: number
          description: Total fees for the mempool in BTC
        unbroadcastcount:
          type: integer
          description: Number of unbroadcast transactions
        usage:
          type: integer
          description: Total memory usage for the mempool
    MempoolSequence:
      type: object
      properties:
        mempool_sequence:
          type: integer
          description: The mempool sequence value
        txids:
          type: array
          description: The transaction ids
          items:
            type: string
    MiningInfo:
      type: object
      properties:
        blocks:
          type: integer
          description: The current block
        chain:
          type: string
          description: Current network name
        currentblocktx:
          type: integer
          description: The number of block transactions of the last assembled block
        currentblockweight:
          type: integer
          description: The block weight of the last assembled block
        difficulty:
          type: number
          description: The current difficulty
        networkhashps:
          type: number
          description: The network hashes per second
        pooledtx:
          type: integer
          description: The size of the mempool
        warnings:
          type: string
          description: Any network and blockchain warnings
    Output:
      type: object
      properties:
        script_pubkey:
          type: string
        value:
          type: integer
    OutputResponse:
      type: object
      properties:
        address:
          type: string
        indexed:
          type: boolean
        inscriptions:
          type: array
          items:
            type: string
        outpoint:
          type: string
        runes:
          type: object
          additionalProperties:
            type: string
        sat_ranges:
          type: array
          items:
            type: array
            items:
              type: integer
        script_pubkey:
          type: string
        spent:
          type: boolean
        transaction:
          type: string
        value:
          type: integer
      example:
        address: address
        runes:
          key: runes
        indexed: true
        inscriptions:
        - inscriptions
        - inscriptions
        spent: true
        sat_ranges:
        - - 6
          - 6
        - - 6
          - 6
        script_pubkey: script_pubkey
        value: 1
        outpoint: outpoint
        transaction: transaction
    PSBTAnalysis:
      type: object
      properties:
        error:
          type: string
        estimated_feerate:
          type: number
        estimated_vsize:
          type: integer
        fee:
          type: number
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PSBTInputAnalysis'
        next:
          type: string
    PSBTBip32Deriv:
      type: object
      properties:
        master_fingerprint:
          type: string
          description: The fingerprint of the master key
        path:
          type: string
          description: The derivation path
        pubkey:
          type: string
          description: The public key
    PSBTInputAnalysis:
      type: object
      properties:
        has_utxo:
          type: boolean
        is_final:
          type: boolean
        missing:
          $ref: '#/components/schemas/PSBTMissingData'
        next:
          type: string
    PSBTMissingData:
      type: object
      properties:
        pubkeys:
          type: array
          items:
            type: string
        redeemscript:
          type: string
        signatures:
          type: array
          items:
            type: string
        witnessscript:
          type: string
    PSBTWitnessUtxo:
      type: object
      properties:
        amount:
          type: number
          description: The value in BTC
        scriptPubKey:
          type: object
          description: The script pub key
          allOf:
          - $ref: '#/components/schemas/Script'
    PrevOut:
      type: object
      properties:
        generated:
          type: boolean
        height:
          type: integer
        scriptPubKey:
          $ref: '#/components/schemas/ScriptPubKey'
        value:
          type: number
    RawFeeEstimate:
      type: object
      properties:
        long:
          type: object
          description: Estimate for long time horizon
          allOf:
          - $ref: '#/components/schemas/FeeHorizonEstimate'
        medium:
          type: object
          description: Estimate for medium time horizon
          allOf:
          - $ref: '#/components/schemas/FeeHorizonEstimate'
        short:
          type: object
          description: Estimate for short time horizon
          allOf:
          - $ref: '#/components/schemas/FeeHorizonEstimate'
    RawMempoolData:
      type: object
      properties:
        detailed:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MempoolEntry'
          description: Only if verbose is true
        sequence:
          type: object
          description: Only if mempool_sequence is true
          allOf:
          - $ref: '#/components/schemas/MempoolSequence'
        txids:
          type: array
          description: Only if verbose is false
          items:
            type: string
    RawTx1:
      type: object
      properties:
        blockhash:
          type: string
        blocktime:
          type: integer
        confirmations:
          type: integer
        hash:
          type: string
        hex:
          type: string
        locktime:
          type: integer
        size:
          type: integer
        time:
          type: integer
        txid:
          type: string
        version:
          type: integer
        vin:
          type: array
          items:
            $ref: '#/components/schemas/TxVin1'
        vout:
          type: array
          items:
            $ref: '#/components/schemas/Vout'
        vsize:
          type: integer
        weight:
          type: integer
    RawTx2:
      type: object
      properties:
        blockhash:
          type: string
        blocktime:
          type: integer
        confirmations:
          type: integer
        hash:
          type: string
        hex:
          type: string
        locktime:
          type: integer
        size:
          type: integer
        time:
          type: integer
        txid:
          type: string
        version:
          type: integer
        vin:
          type: array
          items:
            $ref: '#/components/schemas/TxVin2'
        vout:
          type: array
          items:
            $ref: '#/components/schemas/Vout'
        vsize:
          type: integer
        weight:
          type: integer
    RuneEntry:
      type: object
      properties:
        block:
          type: integer
        burned:
          type: integer
        divisibility:
          type: integer
        etching:
          type: string
        mints:
          type: integer
        number:
          type: integer
        premine:
          type: integer
        spaced_rune:
          type: string
        symbol:
          type: string
        terms:
          $ref: '#/components/schemas/RuneTerms'
        timestamp:
          type: integer
        turbo:
          type: boolean
    RuneListEntry:
      type: object
      properties:
        "0":
          type: string
          description: The first element is the ID
        "1":
          type: object
          description: The second element is the entry data
          allOf:
          - $ref: '#/components/schemas/RuneEntry'
    RuneResponse:
      type: object
      properties:
        entry:
          $ref: '#/components/schemas/RuneEntry'
        id:
          type: string
        mintable:
          type: boolean
        parent:
          type: string
    RuneTerms:
      type: object
      properties:
        amount:
          type: integer
        cap:
          type: string
        height:
          type: array
          items:
            type: integer
        offset:
          type: array
          items:
            type: integer
    RunesBalance:
      type: object
      properties:
        amount:
          type: string
        spaced_rune:
          type: string
        symbol:
          type: string
      example:
        spaced_rune: spaced_rune
        symbol: symbol
        amount: amount
    RunesListResponse:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/RuneListEntry'
        more:
          type: boolean
        next:
          type: integer
        prev:
          type: integer
    RunestoneData:
      type: object
    SatoshiResponse:
      type: object
      properties:
        block:
          type: integer
        charms:
          type: array
          items:
            type: string
        cycle:
          type: integer
        decimal:
          type: string
        degree:
          type: string
        epoch:
          type: integer
        inscriptions:
          type: array
          items:
            type: string
        name:
          type: string
        number:
          type: integer
        offset:
          type: integer
        percentile:
          type: string
        period:
          type: integer
        rarity:
          type: string
        satpoint:
          type: string
        timestamp:
          type: integer
    Script:
      type: object
      properties:
        address:
          type: string
          description: The Bitcoin address (if there is one)
        asm:
          type: string
          description: The assembly representation of the script
        hex:
          type: string
          description: The hex representation of the script
        type:
          type: string
          description: "The type of the script (e.g., 'pubkeyhash')"
    ScriptPubKey:
      type: object
      properties:
        address:
          type: string
        asm:
          type: string
        desc:
          type: string
        hex:
          type: string
        type:
          type: string
    ScriptSig:
      type: object
      properties:
        asm:
          type: string
        hex:
          type: string
    SegwitDetails:
      type: object
      properties:
        address:
          type: string
          description: The Bitcoin address (only if well-defined)
        asm:
          type: string
          description: String representation of the script public key
        desc:
          type: string
          description: Inferred descriptor for the script
        hex:
          type: string
          description: Hex string of the script public key
        p2sh-segwit:
          type: string
          description: P2SH address wrapping this witness script
        type:
          type: string
          description: The type of the script public key
    SmartFeeEstimate:
      type: object
      properties:
        blocks:
          type: integer
          description: Block number where estimate was found
        errors:
          type: array
          description: Errors encountered during processing
          items:
            type: string
        feerate:
          type: number
          description: Estimate fee rate in BTC/kvB
    StatusResponse:
      type: object
      properties:
        address_index:
          type: boolean
        blessed_inscriptions:
          type: integer
        chain:
          type: string
        cursed_inscriptions:
          type: integer
        height:
          type: integer
        initial_sync_time:
          $ref: '#/components/schemas/Duration'
        inscriptions:
          type: integer
        lost_sats:
          type: integer
        minimum_rune_for_next_block:
          type: string
        rune_index:
          type: boolean
        runes:
          type: integer
        sat_index:
          type: boolean
        started:
          type: string
        transaction_index:
          type: boolean
        unrecoverably_reorged:
          type: boolean
        uptime:
          $ref: '#/components/schemas/Duration'
    TestMempoolAcceptResult:
      type: object
      properties:
        allowed:
          type: boolean
          description: Whether this tx would be accepted to the mempool
        fees:
          type: object
          description: Transaction fees
          allOf:
          - $ref: '#/components/schemas/TestMempoolFees'
        package-error:
          type: string
          description: "Package validation error, if any"
        reject-reason:
          type: string
          description: Rejection string
        txid:
          type: string
          description: The transaction hash in hex
        vsize:
          type: integer
          description: Virtual transaction size as defined in BIP 141
        wtxid:
          type: string
          description: The transaction witness hash in hex
    TestMempoolFees:
      type: object
      properties:
        base:
          type: number
          description: Transaction fee in BTC
    Transaction:
      type: object
      properties:
        input:
          type: array
          items:
            $ref: '#/components/schemas/Input'
        lock_time:
          type: integer
        output:
          type: array
          items:
            $ref: '#/components/schemas/Output'
        version:
          type: integer
    TransactionDetails:
      type: object
      properties:
        input:
          type: array
          items:
            $ref: '#/components/schemas/TransactionInput'
        lock_time:
          type: integer
        output:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOutput'
        version:
          type: integer
    TransactionInput:
      type: object
      properties:
        previous_output:
          type: string
        script_sig:
          type: string
        sequence:
          type: integer
        witness:
          type: array
          items:
            type: string
    TransactionOutput:
      type: object
      properties:
        script_pubkey:
          type: string
        value:
          type: integer
    TransactionResponse:
      type: object
      properties:
        chain:
          type: string
        etching:
          type: string
        inscription_count:
          type: integer
        transaction:
          $ref: '#/components/schemas/TransactionDetails'
        txid:
          type: string
    TxOut:
      type: object
      properties:
        bestblock:
          type: string
          description: The hash of the block at the tip of the chain
        coinbase:
          type: boolean
          description: Whether this is a coinbase transaction
        confirmations:
          type: integer
          description: The number of confirmations
        scriptPubKey:
          type: object
          description: The public key script
          allOf:
          - $ref: '#/components/schemas/ScriptPubKey'
        value:
          type: number
          description: The transaction value in BTC
    TxSpendingPrevoutInput:
      type: object
      properties:
        txid:
          type: string
          description: The transaction id
        vout:
          type: integer
          description: The output number
    TxSpendingPrevoutResult:
      type: object
      properties:
        spendingtxid:
          type: string
          description: The transaction id of the mempool transaction spending this
            output
        spent:
          type: boolean
          description: Whether the output is spent
        txid:
          type: string
          description: The transaction id of the checked output
        vout:
          type: integer
          description: The vout value of the checked output
    TxVin1:
      type: object
      properties:
        coinbase:
          type: string
        scriptSig:
          $ref: '#/components/schemas/ScriptSig'
        sequence:
          type: integer
        txid:
          type: string
        txinwitness:
          type: array
          items:
            type: string
        vout:
          type: integer
    TxVin2:
      type: object
      properties:
        coinbase:
          type: string
        prevout:
          $ref: '#/components/schemas/PrevOut'
        scriptSig:
          $ref: '#/components/schemas/ScriptSig'
        sequence:
          type: integer
        txid:
          type: string
        txinwitness:
          type: array
          items:
            type: string
        vout:
          type: integer
    UTXOBlockInfo:
      type: object
      properties:
        coinbase:
          type: number
          description: Coinbase subsidy amount of this block
        new_outputs_ex_coinbase:
          type: number
          description: Total amount of new outputs created by this block
        prevout_spent:
          type: number
          description: Total amount of all prevouts spent in this block
        unspendable:
          type: number
          description: Total amount of unspendable outputs created
        unspendables:
          type: object
          description: Detailed view of unspendable categories
          allOf:
          - $ref: '#/components/schemas/UTXOUnspendables'
    UTXOSetInfo:
      type: object
      properties:
        bestblock:
          type: string
          description: The hash of the block at which these statistics are calculated
        block_info:
          type: object
          description: Info on amounts in the block at this height
          allOf:
          - $ref: '#/components/schemas/UTXOBlockInfo'
        bogosize:
          type: integer
          description: Database-independent metric indicating the UTXO set size
        disk_size:
          type: integer
          description: The estimated size of the chainstate on disk
        hash_serialized_2:
          type: string
          description: The serialized hash (only for hash_serialized_2)
        height:
          type: integer
          description: The block height of the returned statistics
        muhash:
          type: string
          description: The serialized hash (only for muhash)
        total_amount:
          type: number
          description: The total amount of coins in the UTXO set
        total_unspendable_amount:
          type: number
          description: Total amount permanently excluded from UTXO set
        transactions:
          type: integer
          description: The number of transactions with unspent outputs
        txouts:
          type: integer
          description: The number of unspent transaction outputs
    UTXOUnspendables:
      type: object
      properties:
        bip30:
          type: number
          description: Transactions overridden by duplicates
        genesis_block:
          type: number
          description: Unspendable amount of Genesis block subsidy
        scripts:
          type: number
          description: Amounts sent to unspendable scripts
        unclaimed_rewards:
          type: number
          description: Fee rewards unclaimed by miners
    UnknownFields:
      type: object
      additionalProperties:
        type: string
    ValidateAddressResponse:
      type: object
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/ValidateAddressResult'
        msg:
          type: string
      example:
        msg: msg
        code: 0
        data:
          scriptPubKey: scriptPubKey
          witness_program: witness_program
          address: address
          error_locations:
          - 6
          - 6
          witness_version: 1
          isscript: true
          isvalid: true
          error: error
          iswitness: true
    ValidateAddressResult:
      type: object
      properties:
        address:
          type: string
          description: The bitcoin address validated
        error:
          type: string
          description: "Error message, if any"
        error_locations:
          type: array
          description: Indices of likely error locations
          items:
            type: integer
        isscript:
          type: boolean
          description: If the key is a script
        isvalid:
          type: boolean
          description: If the address is valid or not
        iswitness:
          type: boolean
          description: If the address is a witness address
        scriptPubKey:
          type: string
          description: The hex-encoded scriptPubKey
        witness_program:
          type: string
          description: The hex value of the witness program
        witness_version:
          type: integer
          description: The version number of the witness program
      example:
        scriptPubKey: scriptPubKey
        witness_program: witness_program
        address: address
        error_locations:
        - 6
        - 6
        witness_version: 1
        isscript: true
        isvalid: true
        error: error
        iswitness: true
    VerifyMessageRequest:
      type: object
      properties:
        address:
          type: string
          description: The bitcoin address to use for the signature
        message:
          type: string
          description: The message that was signed
        signature:
          type: string
          description: The signature provided by the signer in base 64 encoding
    VerifyMessageResponse:
      type: object
      properties:
        code:
          type: integer
        data:
          type: boolean
        msg:
          type: string
      example:
        msg: msg
        code: 0
        data: true
    Vout:
      type: object
      properties:
        "n":
          type: integer
        scriptPubKey:
          $ref: '#/components/schemas/ScriptPubKey'
        value:
          type: number
    requests.AnalyzePSBTRequest:
      type: object
      properties:
        psbt:
          type: string
          description: The base64-encoded PSBT to analyze
    requests.CombinePSBTRequest:
      required:
      - psbts
      type: object
      properties:
        psbts:
          minItems: 1
          type: array
          description: Array of base64-encoded PSBTs to combine
          items:
            type: string
    requests.CombineRawTransactionRequest:
      required:
      - hexstrings
      type: object
      properties:
        hexstrings:
          minItems: 1
          type: array
          items:
            type: string
    requests.ConvertToPSBTRequest:
      required:
      - hexstring
      type: object
      properties:
        hexstring:
          type: string
          description: The hex string of a raw transaction
        is_witness:
          type: boolean
          description: |-
            Whether the transaction hex is a serialized witness transaction.
            If not provided, heuristic tests will be used in decoding.
            If true, only witness deserialization will be tried.
            If false, only non-witness deserialization will be tried.
            This boolean should reflect whether the transaction has inputs
            (e.g. fully valid, or on-chain transactions), if known by the caller.
            Optional, defaults to heuristic tests if not provided.
        permit_sigdata:
          type: boolean
          description: |-
            If true, any signatures in the input will be discarded and conversion will continue.
            If false, RPC will fail if any signatures are present.
            Optional, defaults to false if not provided.
    requests.CreatePSBTInput:
      type: object
      properties:
        sequence:
          type: integer
          description: The sequence number to use for the input
        txid:
          type: string
          description: The transaction id of the output to spend
        vout:
          type: integer
          description: The output index number (vout) of the output to spend
    requests.CreatePSBTOutput:
      type: object
      properties:
        address:
          type: string
          description: The bitcoin address to send to
        data:
          type: string
          description: Hex-encoded data to embed in the transaction
    requests.CreatePSBTRequest:
      required:
      - inputs
      - outputs
      type: object
      properties:
        inputs:
          minItems: 1
          type: array
          description: The inputs for the transaction
          items:
            $ref: '#/components/schemas/requests.CreatePSBTInput'
        locktime:
          type: integer
          description: Raw locktime. Non-0 value also locktime-activates inputs
        outputs:
          minItems: 1
          type: array
          description: The outputs for the transaction (each address can only appear
            once)
          items:
            $ref: '#/components/schemas/requests.CreatePSBTOutput'
        replaceable:
          type: boolean
          description: Marks this transaction as BIP125-replaceable
    requests.CreateRawTxInput:
      required:
      - txid
      - vout
      type: object
      properties:
        sequence:
          type: integer
          description: |-
            The sequence number
            Optional, default depends on the value of the 'replaceable' and 'locktime' arguments
        txid:
          type: string
          description: The transaction id
        vout:
          type: integer
          description: The output number
    requests.CreateRawTxOutput:
      type: object
      properties:
        address:
          type: number
          description: |-
            The bitcoin address and amount pairs
            Key is the bitcoin address, value is the amount in BTC
        data:
          type: string
          description: |-
            Hex-encoded data output
            If present, this must be the only field in the output
    requests.CreateRawTxRequest:
      required:
      - inputs
      - outputs
      type: object
      properties:
        inputs:
          minItems: 1
          type: array
          description: The inputs for the transaction
          items:
            $ref: '#/components/schemas/requests.CreateRawTxInput'
        locktime:
          type: integer
          description: |-
            Raw locktime. Non-0 value also locktime-activates inputs
            Optional, defaults to 0
        outputs:
          minItems: 1
          type: array
          description: |-
            The outputs for the transaction
            Each address can only appear once and there can only be one 'data' object
          items:
            $ref: '#/components/schemas/requests.CreateRawTxOutput'
        replaceable:
          type: boolean
          description: |-
            Marks this transaction as BIP125-replaceable
            Allows this transaction to be replaced by a transaction with higher fees
            If provided, it is an error if explicit sequence numbers are incompatible
            Optional, defaults to true
    requests.DecodeScriptRequest:
      required:
      - hexstring
      type: object
      properties:
        hexstring:
          type: string
          description: The hex-encoded script to decode
    requests.EstimateRawFeeRequest:
      required:
      - conf_target
      type: object
      properties:
        conf_target:
          maximum: 1008
          minimum: 1
          type: integer
          description: Confirmation target in blocks (1 - 1008)
        threshold:
          type: number
          description: |-
            The proportion of transactions in a given feerate range that must have been
            confirmed within conf_target in order to consider those feerates as high enough
            and proceed to check lower buckets.
            Optional, defaults to 0.95
    requests.EstimateSmartFeeRequest:
      type: object
      properties:
        conf_target:
          type: integer
          description: "Required: Confirmation target in blocks (1 - 1008)"
        estimate_mode:
          type: string
          description: "Optional: The fee estimate mode (unset, economical, conservative)"
    requests.GetBlockStatsRequest:
      type: object
      properties:
        hash_or_height:
          type: object
          description: "Required: The block hash (string) or height (numeric)"
        stats:
          type: array
          description: "Optional: Values to plot (if empty, all values will be included)"
          items:
            type: string
    requests.GetChainTxStatsRequest:
      type: object
      properties:
        blockhash:
          type: string
          description: "Optional: The hash of the block that ends the window (default=chain\
            \ tip)"
        nblocks:
          type: integer
          description: "Optional: Size of the window in number of blocks (default=one\
            \ month)"
    requests.GetMempoolAncestorsRequest:
      type: object
      properties:
        txid:
          type: string
          description: "Required: The transaction id (must be in mempool)"
        verbose:
          type: boolean
          description: "Optional: True for detailed information, false for just txids"
    requests.GetMempoolDescendantsRequest:
      type: object
      properties:
        txid:
          type: string
          description: "Required: The transaction id (must be in mempool)"
        verbose:
          type: boolean
          description: "Optional: True for detailed information, false for just txids"
    requests.GetNetworkHashPSRequest:
      type: object
      properties:
        height:
          type: integer
          description: "Optional: To estimate at the time of the given height (default=-1)"
        nblocks:
          type: integer
          description: "Optional: The number of blocks (default=120, -1 for since\
            \ last difficulty change)"
    requests.GetRawMempoolRequest:
      type: object
      properties:
        mempool_sequence:
          type: boolean
          description: "Optional: If verbose=false, returns txids with mempool sequence\
            \ number"
        verbose:
          type: boolean
          description: "Optional: True for detailed information, false for just txids"
    requests.GetTxOutProofRequest:
      type: object
      properties:
        blockhash:
          type: string
          description: "Optional: If specified, looks for txid in the block with this\
            \ hash"
        txids:
          type: array
          description: "Required: Array of transaction ids to filter"
          items:
            type: string
    requests.GetTxOutRequest:
      type: object
      properties:
        include_mempool:
          type: boolean
          description: "Optional: Whether to include the mempool (default=true)"
        "n":
          type: integer
          description: "Required: vout number"
        txid:
          type: string
          description: "Required: The transaction id"
    requests.GetTxOutSetInfoRequest:
      type: object
      properties:
        hash_or_height:
          type: object
          description: Block hash or height
        hash_type:
          type: string
          description: Which UTXO set hash should be calculated
        use_index:
          type: boolean
          description: Whether to use coinstatsindex
    requests.GetTxSpendingPrevoutRequest:
      type: object
      properties:
        outputs:
          type: array
          description: The transaction outputs to check
          items:
            $ref: '#/components/schemas/TxSpendingPrevoutInput'
    requests.JoinPSBTsRequest:
      type: object
      properties:
        psbts:
          type: array
          description: Array of base64-encoded PSBTs to join
          items:
            type: string
    requests.SendRawTransactionRequest:
      type: object
      properties:
        hex_string:
          type: string
          description: The hex string of the raw transaction
        max_fee_rate:
          type: number
          description: "Optional: Reject transactions whose fee rate is higher than\
            \ this value (BTC/kvB)"
    requests.TestMempoolAcceptRequest:
      type: object
      properties:
        max_fee_rate:
          type: number
          description: "Optional: Reject transactions whose fee rate is higher than\
            \ this value (BTC/kvB)"
        raw_txs:
          type: array
          description: Array of hex-encoded raw transactions
          items:
            type: string
    requests.VerifyTxOutProofRequest:
      type: object
      properties:
        proof:
          type: string
          description: The hex-encoded proof generated by gettxoutproof
    utils.ResponseEnvelope:
      type: object
      properties:
        code:
          type: integer
        data:
          type: object
        msg:
          type: string
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/Block2'
    inline_response_200_1:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: string
    inline_response_200_2:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/Block3'
    inline_response_200_3:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/Block1'
    inline_response_200_4:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/BlockStats'
    inline_response_200_5:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/BlockResponse'
    inline_response_200_6:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/BlockchainInfo'
    inline_response_200_7:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: integer
    inline_response_200_8:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/BlocksResponse'
    inline_response_200_9:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: number
    inline_response_200_10:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/ChainTxStats'
    inline_response_200_11:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RawFeeEstimate'
    inline_response_200_12:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/SmartFeeEstimate'
    inline_response_200_13:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/InscriptionResponse'
    inline_response_200_14:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/LatestInscriptionsResponse'
    inline_response_200_15:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/InscriptionResponse'
    inline_response_200_16:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/MempoolAncestorsData'
    inline_response_200_17:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/MempoolDescendantsData'
    inline_response_200_18:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/MempoolInfo'
    inline_response_200_19:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RawMempoolData'
    inline_response_200_20:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TestMempoolAcceptResult'
    inline_response_200_21:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/MiningInfo'
    inline_response_200_22:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/OutputResponse'
    inline_response_200_23:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/OutputResponse'
    inline_response_200_24:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/PSBTAnalysis'
    inline_response_200_25:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/DecodedPSBT'
    inline_response_200_26:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RuneResponse'
    inline_response_200_27:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RunesListResponse'
    inline_response_200_28:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/SatoshiResponse'
    inline_response_200_29:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/DecodedScript'
    inline_response_200_30:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/StatusResponse'
    inline_response_200_31:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/TxOut'
    inline_response_200_32:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/UTXOSetInfo'
    inline_response_200_33:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: array
            items:
              type: string
    inline_response_200_34:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TxSpendingPrevoutResult'
    inline_response_200_35:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/TransactionResponse'
    inline_response_200_36:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/DecodeResponse'
    inline_response_200_37:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RawTx1'
    inline_response_200_38:
      allOf:
      - $ref: '#/components/schemas/utils.ResponseEnvelope'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/RawTx2'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
x-original-swagger-version: "2.0"
