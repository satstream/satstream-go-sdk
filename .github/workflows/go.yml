  name: Publish Go Module

  on:
    workflow_dispatch:       # Allows manual triggering
    push:
      branches:
        - main

  jobs:
    publish:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0   # Fetch all history for tags

        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version: '1.22'
            check-latest: true

        - name: Setup Go module
          run: |
            # Initialize go module
            go mod init github.com/satstream/satstream-go-sdk
            # Add required dependencies
            go mod tidy
            # Create a basic README.md if it doesn't exist
            if [ ! -f README.md ]; then
              echo "# Satstream Go SDK" > README.md
              echo "" >> README.md
              echo "## Installation" >> README.md
              echo "" >> README.md
              echo "\`\`\`bash" >> README.md
              echo "go get github.com/satstream/satstream-go-sdk" >> README.md
              echo "\`\`\`" >> README.md
            fi

        - name: Get latest version
          id: get_version
          run: |
            # Get the latest tag
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            echo "Latest tag: $LATEST_TAG"
            
            # Remove 'v' prefix for version comparison
            LATEST_VERSION=${LATEST_TAG#v}
            
            # Split version into parts
            IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_VERSION"
            MAJOR="${VERSION_PARTS[0]}"
            MINOR="${VERSION_PARTS[1]}"
            PATCH="${VERSION_PARTS[2]}"
            
            # Increment patch version
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
            
            echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
            echo "New version will be: $NEW_VERSION"

        - name: Create and push new tag
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
            git push origin ${{ env.NEW_VERSION }}

        - name: Publish to Go proxy
          run: |
            GOPROXY=proxy.golang.org go list -m github.com/satstream/ss-api@${{ env.NEW_VERSION }}
